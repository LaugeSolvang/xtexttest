/*
 * generated by Xtext 2.36.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getStoryAccess().getGroup(), "rule__Story__Group__0");
			builder.put(grammarAccess.getLocationAccess().getGroup(), "rule__Location__Group__0");
			builder.put(grammarAccess.getPlayerAccess().getGroup(), "rule__Player__Group__0");
			builder.put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
			builder.put(grammarAccess.getItemAccess().getGroup(), "rule__Item__Group__0");
			builder.put(grammarAccess.getNPCAccess().getGroup(), "rule__NPC__Group__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getQuestAccess().getGroup(), "rule__Quest__Group__0");
			builder.put(grammarAccess.getModelAccess().getStoryAssignment_0(), "rule__Model__StoryAssignment_0");
			builder.put(grammarAccess.getModelAccess().getPlayerAssignment_1(), "rule__Model__PlayerAssignment_1");
			builder.put(grammarAccess.getModelAccess().getLocationsAssignment_3(), "rule__Model__LocationsAssignment_3");
			builder.put(grammarAccess.getModelAccess().getNpcAssignment_5(), "rule__Model__NpcAssignment_5");
			builder.put(grammarAccess.getModelAccess().getItemAssignment_7(), "rule__Model__ItemAssignment_7");
			builder.put(grammarAccess.getModelAccess().getActionAssignment_9(), "rule__Model__ActionAssignment_9");
			builder.put(grammarAccess.getModelAccess().getQuestAssignment_11(), "rule__Model__QuestAssignment_11");
			builder.put(grammarAccess.getStoryAccess().getNameAssignment_2(), "rule__Story__NameAssignment_2");
			builder.put(grammarAccess.getStoryAccess().getStartLocationAssignment_8(), "rule__Story__StartLocationAssignment_8");
			builder.put(grammarAccess.getLocationAccess().getNameAssignment_1(), "rule__Location__NameAssignment_1");
			builder.put(grammarAccess.getLocationAccess().getNPCsAssignment_3(), "rule__Location__NPCsAssignment_3");
			builder.put(grammarAccess.getLocationAccess().getItemsAssignment_5(), "rule__Location__ItemsAssignment_5");
			builder.put(grammarAccess.getLocationAccess().getConnectionsAssignment_7(), "rule__Location__ConnectionsAssignment_7");
			builder.put(grammarAccess.getPlayerAccess().getNameAssignment_1(), "rule__Player__NameAssignment_1");
			builder.put(grammarAccess.getPlayerAccess().getActionsAssignment_3(), "rule__Player__ActionsAssignment_3");
			builder.put(grammarAccess.getPlayerAccess().getItemsAssignment_5(), "rule__Player__ItemsAssignment_5");
			builder.put(grammarAccess.getPlayerAccess().getAttrAssignment_7(), "rule__Player__AttrAssignment_7");
			builder.put(grammarAccess.getAttributeAccess().getNameAssignment_0(), "rule__Attribute__NameAssignment_0");
			builder.put(grammarAccess.getItemAccess().getNameAssignment_1(), "rule__Item__NameAssignment_1");
			builder.put(grammarAccess.getItemAccess().getActionsAssignment_5(), "rule__Item__ActionsAssignment_5");
			builder.put(grammarAccess.getNPCAccess().getNameAssignment_1(), "rule__NPC__NameAssignment_1");
			builder.put(grammarAccess.getNPCAccess().getItemsAssignment_3(), "rule__NPC__ItemsAssignment_3");
			builder.put(grammarAccess.getNPCAccess().getActionsAssignment_5(), "rule__NPC__ActionsAssignment_5");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
			builder.put(grammarAccess.getQuestAccess().getNameAssignment_0(), "rule__Quest__NameAssignment_0");
			builder.put(grammarAccess.getQuestAccess().getItemsAssignment_8(), "rule__Quest__ItemsAssignment_8");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
